/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo4.vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import universidadgrupo4.control.CursadaData;
import universidadgrupo4.modelos.Conexion;
import universidadgrupo4.modelos.Cursada;

/**
 *
 * @author Maxi
 */
public class ViewCargaNotas extends javax.swing.JInternalFrame {

    Conexion conexion;
    public ViewCargaNotas(Conexion conexion) {
        initComponents();
        this.conexion=conexion;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtIdMateria = new javax.swing.JTextField();
        jtIdAlumno = new javax.swing.JTextField();
        jtNota = new javax.swing.JTextField();
        jbCargar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Sistema de Notas");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setText("ID ALUMNO");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel5.setText("ID MATERIA");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel6.setText("NOTA");

        jbCargar.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jbCargar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Maxi\\Desktop\\ULP\\LAB I\\plus2.png")); // NOI18N
        jbCargar.setText("   Cargar Nota");
        jbCargar.setPreferredSize(new java.awt.Dimension(89, 31));
        jbCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtIdAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(jtIdMateria)
                    .addComponent(jtNota))
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jtIdAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtIdMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNota, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(44, 44, 44)
                .addComponent(jbCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCargarActionPerformed
        int idAlumno=0,idMateria=0;
        float nota=0;
        boolean val=false;
        CursadaData nuevo = new CursadaData(conexion);
        
        
            try{
                idAlumno = Integer.parseInt(jtIdAlumno.getText());
                try{
                    idMateria = Integer.parseInt(jtIdMateria.getText());
                        try{
                            nota = Float.parseFloat(jtNota.getText());
                            if (nota<1||nota>10){
                                JOptionPane.showMessageDialog(this, "Nota debe ser un numero entre 1 y 10");
                            }else{
                                val=true;
                                Cursada cur = new Cursada(nuevo.buscarAlumno(idAlumno),nuevo.buscarMateria(idMateria),nota);
                                List<Cursada> arrCursada = nuevo.obtenerCursadas();
                                try {
                                    if (nuevo.buscarMateria(idMateria)==null){
                                        JOptionPane.showMessageDialog(this, "No se encuentra la materia con ID: "+ idMateria);
                                    }
                                    else if(nuevo.buscarAlumno(idAlumno)==null){
                                        JOptionPane.showMessageDialog(this, "No se encuentra el alumno con ID: "+ idAlumno);
                                    }
                                    else{
                                        for (Cursada item:arrCursada){
                                            if(item.getAlumno().getIdAlumno()==idAlumno && item.getMateria().getIdMateria()==idMateria && nota <=10){
                                                if(item.getNota()>nota){
                                                    JOptionPane.showMessageDialog(this, "La nota anterior es mayor");
                                                    jtNota.requestFocus();                                                   
                                                }else{
                                                    nuevo.actualizarNotaCursada(idAlumno, idMateria, nota);
                                                    JOptionPane.showMessageDialog(this, "Nota actualizada");
                                                    limpiar();
                                                }
                                            }else if(!nuevo.CheckCursada(idAlumno, idMateria)){
                                                JOptionPane.showMessageDialog(this, "Alumno ID: "+idAlumno+" no esta inscrito en materia ID: "+idMateria);
                                                limpiar();
                                                break;
                                            }    
                                            
                                        }
                
                                    }
                                }catch (NullPointerException e){}    
                            }
                            
                        }catch (NumberFormatException e){
                            JOptionPane.showMessageDialog(this, "Nota debe ser un numero entero o decimal"); 
                        }
                }catch (NumberFormatException e){
                    JOptionPane.showMessageDialog(this, "ID de materia debe ser un numero entero"); 
                }
            }catch (NumberFormatException e){
                JOptionPane.showMessageDialog(this, "ID de alumno debe ser un numero entero"); 
            }
                
            
        
           
    }//GEN-LAST:event_jbCargarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbCargar;
    private javax.swing.JTextField jtIdAlumno;
    private javax.swing.JTextField jtIdMateria;
    private javax.swing.JTextField jtNota;
    // End of variables declaration//GEN-END:variables
void limpiar(){
    jtIdMateria.setText(null);
    jtIdAlumno.setText(null);
    jtNota.setText(null);
    jtIdAlumno.requestFocus();
}
}
